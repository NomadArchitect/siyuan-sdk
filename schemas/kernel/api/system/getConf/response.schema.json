{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://github.com/siyuan-community/siyuan-sdk/raw/main/schemas/kernel/api/system/getConf/response.schema.json",
    "$comment": "v3.0.2",
    "$ref": "#/$defs/root",
    "$defs": {
        "root": {
            "title": "response body",
            "description": "",
            "type": "object",
            "additionalProperties": false,
            "required": [
                "code",
                "msg",
                "data"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "status code"
                },
                "msg": {
                    "type": "string",
                    "description": "status message"
                },
                "data": {
                    "$ref": "#/$defs/data"
                }
            }
        },
        "data": {
            "title": "IData",
            "description": "response data",
            "type": "object",
            "additionalProperties": false,
            "required": [
                "start",
                "conf"
            ],
            "properties": {
                "start": {
                    "type": "boolean",
                    "description": "Whether the user interface is not loaded"
                },
                "conf": {
                    "$ref": "#/$defs/conf"
                }
            }
        },
        "conf": {
            "title": "IConf",
            "description": "Configuration object",
            "type": "object",
            "additionalProperties": false,
            "required": [
                "accessAuthCode",
                "account",
                "ai",
                "api",
                "appearance",
                "bazaar",
                "cloudRegion",
                "editor",
                "export",
                "fileTree",
                "flashcard",
                "graph",
                "keymap",
                "lang",
                "langs",
                "localIPs",
                "logLevel",
                "openHelp",
                "readonly",
                "repo",
                "search",
                "showChangelog",
                "snippet",
                "stat",
                "sync",
                "system",
                "tag",
                "uiLayout",
                "userData"
            ],
            "properties": {
                "accessAuthCode": {
                    "type": "string",
                    "description": "Access authorization code",
                    "default": "",
                    "enum": [
                        "",
                        "*******"
                    ]
                },
                "account": {
                    "$ref": "#/$defs/account"
                },
                "ai": {
                    "$ref": "#/$defs/ai"
                },
                "api": {
                    "$ref": "#/$defs/api"
                },
                "appearance": {
                    "$ref": "#/$defs/appearance"
                },
                "bazaar": {
                    "$ref": "#/$defs/bazaar"
                },
                "cloudRegion": {
                    "type": "integer",
                    "description": "Cloud Service Provider Region\n- `0`: Chinese mainland\n- `1`: North America",
                    "enum": [
                        0,
                        1
                    ]
                },
                "editor": {
                    "$ref": "#/$defs/editor"
                },
                "export": {
                    "$ref": "#/$defs/export"
                },
                "fileTree": {},
                "flashcard": {},
                "graph": {},
                "keymap": {},
                "lang": {
                    "title": "TLang",
                    "type": "string",
                    "description": "User interface language  \nSame as {@link IAppearance.lang}",
                    "enum": [
                        "en_US",
                        "es_ES",
                        "fr_FR",
                        "zh_CHT",
                        "zh_CN"
                    ]
                },
                "langs": {
                    "type": "array",
                    "description": "List of supported languages",
                    "items": {
                        "$ref": "#/$defs/lang"
                    }
                },
                "localIPs": {
                    "type": "array",
                    "description": "A list of the IP addresses of the devices on which the kernel resides",
                    "items": {
                        "type": "string",
                        "description": "IP addresses (IPv4 & IPv6)",
                        "examples": [
                            "127.0.0.1",
                            "192.168.1.1",
                            "10.0.0.1",
                            "[::1]",
                            "[fe80::8cc:2a8:23fc:daf3]"
                        ]
                    }
                },
                "logLevel": {
                    "title": "TLogLevel",
                    "type": "string",
                    "description": "Log level",
                    "enum": [
                        "off",
                        "trace",
                        "debug",
                        "info",
                        "warn",
                        "error",
                        "fatal"
                    ]
                },
                "openHelp": {
                    "type": "boolean",
                    "description": "Whether to open the user guide after startup"
                },
                "readonly": {
                    "type": "boolean",
                    "description": "Whether it is running in read-only mode"
                },
                "repo": {
                    "$ref": "#/$defs/repo"
                },
                "search": {},
                "showChangelog": {
                    "type": "boolean",
                    "description": "Whether to display the changelog for this release version"
                },
                "snippet": {
                    "$ref": "#/$defs/snippet"
                },
                "stat": {
                    "$ref": "#/$defs/stat"
                },
                "sync": {
                    "$ref": "#/$defs/sync"
                },
                "system": {
                    "$ref": "#/$defs/system"
                },
                "tag": {
                    "$ref": "#/$defs/tag"
                },
                "uiLayout": {},
                "userData": {
                    "type": "string",
                    "description": "Community user data (Encrypted)",
                    "default": ""
                }
            }
        },
        "account": {
            "title": "IAccount",
            "description": "Account configuration",
            "type": "object",
            "additionalProperties": false,
            "required": [
                "displayTitle",
                "displayVIP"
            ],
            "properties": {
                "displayTitle": {
                    "type": "boolean",
                    "description": "Display the title icon"
                },
                "displayVIP": {
                    "type": "boolean",
                    "description": "Display the VIP icon"
                }
            }
        },
        "ai": {
            "title": "IAi",
            "type": "object",
            "description": "Artificial Intelligence (AI) related configuration",
            "additionalProperties": false,
            "required": [
                "openAI"
            ],
            "properties": {
                "openAI": {
                    "$ref": "#/$defs/openAI"
                }
            }
        },
        "openAI": {
            "title": "IOpenAI",
            "description": "Open AI related configuration",
            "type": "object",
            "additionalProperties": false,
            "required": [
                "apiBaseURL",
                "apiKey",
                "apiMaxTokens",
                "apiModel",
                "apiProvider",
                "apiProxy",
                "apiTimeout",
                "apiUserAgent",
                "apiVersion"
            ],
            "properties": {
                "apiBaseURL": {
                    "type": "string",
                    "description": "API base URL",
                    "format": "uri",
                    "examples": [
                        "https://api.openai.com/v1"
                    ]
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key",
                    "examples": [
                        "sk-0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKL"
                    ]
                },
                "apiMaxTokens": {
                    "type": "integer",
                    "description": "Maximum number of tokens (0 means no limit)",
                    "minimum": 0
                },
                "apiModel": {
                    "title": "TOpenAIModel",
                    "type": "string",
                    "description": "The model name called by the API",
                    "enum": [
                        "gpt-4",
                        "gpt-4-32k",
                        "gpt-3.5-turbo",
                        "gpt-3.5-turbo-16k"
                    ]
                },
                "apiProvider": {
                    "type": "string",
                    "description": "API Provider",
                    "enum": [
                        "OpenAI",
                        "Azure"
                    ]
                },
                "apiProxy": {
                    "type": "string",
                    "description": "API request proxy address",
                    "examples": [
                        "http://127.0.0.1:1080",
                        "socks://127.0.0.1:1080",
                        "socks5://127.0.0.1:1080"
                    ]
                },
                "apiTimeout": {
                    "type": "integer",
                    "description": "API request timeout (unit: seconds)",
                    "minimum": 0
                },
                "apiUserAgent": {
                    "type": "string",
                    "description": "API request additional user agent field"
                },
                "apiVersion": {
                    "type": "string",
                    "description": "API version number"
                }
            }
        },
        "api": {
            "title": "IApi",
            "type": "object",
            "description": "SiYuan API related configuration",
            "additionalProperties": false,
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "description": "API Token",
                    "examples": [
                        "",
                        "0123456789abcdef"
                    ]
                }
            }
        },
        "appearance": {
            "title": "IAppearance",
            "type": "object",
            "description": "SiYuan appearance related configuration",
            "additionalProperties": false,
            "required": [
                "closeButtonBehavior",
                "codeBlockThemeDark",
                "codeBlockThemeLight",
                "darkThemes",
                "hideStatusBar",
                "icon",
                "iconVer",
                "icons",
                "lang",
                "lightThemes",
                "mode",
                "modeOS",
                "themeDark",
                "themeJS",
                "themeLight",
                "themeVer"
            ],
            "properties": {
                "closeButtonBehavior": {
                    "type": "integer",
                    "description": "Close button behavior\n- `0`: Exit application\n- `1`: Minimize to pallets",
                    "enum": [
                        0,
                        1
                    ]
                },
                "codeBlockThemeDark": {
                    "type": "string",
                    "description": "Dark code block theme"
                },
                "codeBlockThemeLight": {
                    "type": "string",
                    "description": "Light code block theme"
                },
                "darkThemes": {
                    "type": "array",
                    "description": "List of installed dark themes",
                    "items": {
                        "type": "string",
                        "description": "Dark theme name"
                    }
                },
                "hideStatusBar": {
                    "type": "boolean",
                    "description": "Whether to hide status bar"
                },
                "icon": {
                    "type": "string",
                    "description": "The name of the icon currently in use"
                },
                "iconVer": {
                    "type": "string",
                    "description": "The version number of the icon currently in use"
                },
                "icons": {
                    "type": "array",
                    "description": "List of installed icon names",
                    "items": {
                        "type": "string",
                        "description": "Icon name"
                    }
                },
                "lang": {
                    "type": "string",
                    "description": "The language used by the current user",
                    "enum": [
                        "en_US",
                        "es_ES",
                        "fr_FR",
                        "zh_CHT",
                        "zh_CN"
                    ]
                },
                "lightThemes": {
                    "type": "array",
                    "description": "List of installed light themes",
                    "items": {
                        "type": "string",
                        "description": "Light theme name"
                    }
                },
                "mode": {
                    "type": "integer",
                    "description": "The current theme mode\n- `0`: Light theme\n- `1`: Dark theme",
                    "enum": [
                        0,
                        1
                    ]
                },
                "modeOS": {
                    "type": "boolean",
                    "description": "Whether the theme mode follows the system theme"
                },
                "themeDark": {
                    "type": "string",
                    "description": "The name of the dark theme currently in use"
                },
                "themeJS": {
                    "type": "boolean",
                    "description": "Whether the current theme has enabled theme JavaScript"
                },
                "themeLight": {
                    "type": "string",
                    "description": "The name of the light theme currently in use"
                },
                "themeVer": {
                    "type": "string",
                    "description": "The version number of the theme currently in use"
                }
            }
        },
        "bazaar": {
            "title": "IBazaar",
            "type": "object",
            "description": "SiYuan bazaar related configuration",
            "additionalProperties": false,
            "required": [
                "petalDisabled",
                "trust"
            ],
            "properties": {
                "petalDisabled": {
                    "type": "boolean",
                    "description": "Whether to disable all plug-ins"
                },
                "trust": {
                    "type": "boolean",
                    "description": "Whether to trust (enable) the resources for the bazaar"
                }
            }
        },
        "editor": {
            "title": "IEditor",
            "type": "object",
            "description": "SiYuan editor related configuration",
            "additionalProperties": false,
            "required": [
                "backlinkExpandCount",
                "backmentionExpandCount",
                "blockRefDynamicAnchorTextMaxLen",
                "codeLigatures",
                "codeLineWrap",
                "codeSyntaxHighlightLineNum",
                "codeTabSpaces",
                "displayBookmarkIcon",
                "displayNetImgMark",
                "dynamicLoadBlocks",
                "embedBlockBreadcrumb",
                "emoji",
                "floatWindowMode",
                "fontFamily",
                "fontSize",
                "fontSizeScrollZoom",
                "fullWidth",
                "generateHistoryInterval",
                "historyRetentionDays",
                "justify",
                "katexMacros",
                "listItemDotNumberClickFocus",
                "listLogicalOutdent",
                "onlySearchForDoc",
                "plantUMLServePath",
                "readOnly",
                "rtl",
                "spellcheck",
                "virtualBlockRef",
                "virtualBlockRefExclude",
                "virtualBlockRefInclude"
            ],
            "properties": {
                "backlinkExpandCount": {
                    "type": "integer",
                    "description": "The default number of backlinks to expand"
                },
                "backmentionExpandCount": {
                    "type": "integer",
                    "description": "The default number of backlinks to mention"
                },
                "blockRefDynamicAnchorTextMaxLen": {
                    "type": "integer",
                    "description": "The maximum length of the dynamic anchor text for block references"
                },
                "codeLigatures": {
                    "type": "boolean",
                    "description": "Whether the code block has enabled ligatures"
                },
                "codeLineWrap": {
                    "type": "boolean",
                    "description": "Whether the code block is automatically wrapped"
                },
                "codeSyntaxHighlightLineNum": {
                    "type": "boolean",
                    "description": "Whether the code block displays line numbers"
                },
                "codeTabSpaces": {
                    "type": "integer",
                    "description": "The number of spaces generated by the Tab key in the code block, configured as 0 means no conversion to spaces",
                    "minimum": 0
                },
                "displayBookmarkIcon": {
                    "type": "boolean",
                    "description": "Whether to display the bookmark icon"
                },
                "displayNetImgMark": {
                    "type": "boolean",
                    "description": "Whether to display the network image mark"
                },
                "dynamicLoadBlocks": {
                    "type": "integer",
                    "description": "The number of blocks loaded each time they are dynamically loaded",
                    "minimum": 48,
                    "maximum": 1024
                },
                "embedBlockBreadcrumb": {
                    "type": "boolean",
                    "description": "Whether the embedded block displays breadcrumbs"
                },
                "emoji": {
                    "type": "array",
                    "description": "Common emoji icons",
                    "items": {
                        "type": "string",
                        "description": "Emoji icon",
                        "examples": [
                            "1f4da",
                            "material/folder-project.svg"
                        ]
                    }
                },
                "floatWindowMode": {
                    "type": "integer",
                    "description": "The trigger mode of the preview window\n- `0`: Hover over the cursor\n- `1`: Hover over the cursor while holding down Ctrl\n- `2`: Do not trigger the floating window",
                    "enum": [
                        0,
                        1,
                        2
                    ]
                },
                "fontFamily": {
                    "type": "string",
                    "description": "The font used in the editor"
                },
                "fontSize": {
                    "type": "integer",
                    "description": "The font size used in the editor"
                },
                "fontSizeScrollZoom": {
                    "type": "boolean",
                    "description": "Whether to enable the use of the mouse wheel to adjust the font size of the editor"
                },
                "fullWidth": {
                    "type": "boolean",
                    "description": "Whether the editor uses maximum width"
                },
                "generateHistoryInterval": {
                    "type": "integer",
                    "description": "The time interval for generating document history, set to 0 to disable document history (unit: minutes)",
                    "minimum": 0
                },
                "historyRetentionDays": {
                    "type": "integer",
                    "description": "History retention days"
                },
                "justify": {
                    "type": "boolean",
                    "description": "Whether to enable text justification"
                },
                "katexMacros": {
                    "type": "string",
                    "description": "KeTex macro definition (JSON string)"
                },
                "listItemDotNumberClickFocus": {
                    "type": "boolean",
                    "description": "Whether to enable single-click list item mark focus"
                },
                "listLogicalOutdent": {
                    "type": "boolean",
                    "description": "Whether to enable the list logical reverse indentation scheme"
                },
                "onlySearchForDoc": {
                    "type": "boolean",
                    "description": "Whether to enable the `[[` symbol to search only for document blocks"
                },
                "plantUMLServePath": {
                    "type": "string",
                    "description": "PlantUML rendering service address"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Whether to enable read-only mode"
                },
                "rtl": {
                    "type": "boolean",
                    "description": "Whether to enable RTL (left-to-right chirography) mode"
                },
                "spellcheck": {
                    "type": "boolean",
                    "description": "Whether to enable spell checking"
                },
                "virtualBlockRef": {
                    "type": "boolean",
                    "description": "Whether to enable virtual references"
                },
                "virtualBlockRefExclude": {
                    "type": "string",
                    "description": "Virtual reference keyword exclusion list (separated by commas `,`)"
                },
                "virtualBlockRefInclude": {
                    "type": "string",
                    "description": "Virtual reference keyword inclusion list (separated by commas `,`)"
                }
            }
        },
        "export": {
            "title": "IExport",
            "type": "object",
            "description": "SiYuan export related configuration",
            "additionalProperties": false,
            "required": [
                "paragraphBeginningSpace",
                "addTitle",
                "blockRefMode",
                "blockEmbedMode",
                "blockRefTextLeft",
                "blockRefTextRight",
                "tagOpenMarker",
                "tagCloseMarker",
                "fileAnnotationRefMode",
                "pandocBin",
                "markdownYFM",
                "pdfFooter",
                "docxTemplate",
                "pdfWatermarkStr",
                "pdfWatermarkDesc",
                "imageWatermarkStr",
                "imageWatermarkDesc"
            ],
            "properties": {
                "paragraphBeginningSpace": {
                    "type": "boolean",
                    "description": "Whether the beginning of the paragraph is empty two spaces.\nInsert two full-width spaces `U+3000` at the beginning of the paragraph."
                },
                "addTitle": {
                    "type": "boolean",
                    "description": "Add article title (insert the article title as a first-level title at the beginning of the document)"
                },
                "blockRefMode": {
                    "type": "integer",
                    "description": "Content block reference export mode\n- `0`: Original text (deprecated)\n- `1`: Quotation block (deprecated)\n- `2`: Anchor text block link\n- `3`: Anchor text only\n- `4`: Footnote\n- `5`: Anchor hash\n",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                    ]
                },
                "blockEmbedMode": {
                    "type": "integer",
                    "description": "Embedded block export mode\n- `0`: Original block content\n- `1`: Quotation block",
                    "enum": [
                        0,
                        1
                    ]
                },
                "blockRefTextLeft": {
                    "type": "string",
                    "description": "The symbol on the left side of the block reference anchor text during export"
                },
                "blockRefTextRight": {
                    "type": "string",
                    "description": "The symbol on the right side of the block reference anchor text during export"
                },
                "tagOpenMarker": {
                    "type": "string",
                    "description": "Tag start marker symbol"
                },
                "tagCloseMarker": {
                    "type": "string",
                    "description": "Tag close marker symbol"
                },
                "fileAnnotationRefMode": {
                    "type": "integer",
                    "description": "File annotation reference export mode\n- `0`: File name - page number - anchor text\n- `1`: Anchor text only",
                    "enum": [
                        0,
                        1
                    ]
                },
                "pandocBin": {
                    "type": "string",
                    "description": "Pandoc executable file path"
                },
                "markdownYFM": {
                    "type": "boolean",
                    "description": "Whether to add YAML Front Matter when exporting to Markdown"
                },
                "pdfFooter": {
                    "type": "string",
                    "description": "Custom footer content when exporting to PDF"
                },
                "docxTemplate": {
                    "type": "string",
                    "description": "The path of the template file used when exporting to Docx"
                },
                "pdfWatermarkStr": {
                    "type": "string",
                    "description": "The watermark text or watermark file path used when exporting to PDF"
                },
                "pdfWatermarkDesc": {
                    "type": "string",
                    "description": "Custom watermark position, size, style, etc. when exporting to PDF"
                },
                "imageWatermarkStr": {
                    "type": "string",
                    "description": "The watermark text or watermark file path used when exporting to an image"
                },
                "imageWatermarkDesc": {
                    "type": "string",
                    "description": "Custom watermark position, size, style, etc. when exporting to an image"
                }
            }
        },
        "lang": {
            "title": "ILang",
            "type": "object",
            "description": "Supported language",
            "additionalProperties": false,
            "required": [
                "label",
                "name"
            ],
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Language name",
                    "examples": [
                        "简体中文",
                        "繁体中文",
                        "English"
                    ]
                },
                "name": {
                    "type": "string",
                    "description": "Language identifier",
                    "pattern": "^[a-z]{2}_[A-Z]{2,}$",
                    "examples": [
                        "zh_CN",
                        "zh_CHT",
                        "en_US"
                    ]
                }
            }
        },
        "repo": {
            "title": "IRepo",
            "type": "object",
            "description": "Snapshot repository related configuration",
            "additionalProperties": false,
            "required": [
                "key",
                "syncIndexTiming"
            ],
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Snapshot encryption key (base64 encoded 256-bit key)",
                    "pattern": "^[A-Za-z0-9+/]{43}=$"
                },
                "syncIndexTiming": {
                    "type": "integer",
                    "description": "Synchronous index timing, if it exceeds this time, the user is prompted that the index performance is degraded (unit: milliseconds)"
                }
            }
        },
        "snippet": {
            "title": "ISnippet",
            "type": "object",
            "description": "SiYuan code snippets related configuration",
            "additionalProperties": false,
            "required": [
                "enabledCSS",
                "enabledJS"
            ],
            "properties": {
                "enabledCSS": {
                    "type": "boolean",
                    "description": "Whether to enable CSS code snippets"
                },
                "enabledJS": {
                    "type": "boolean",
                    "description": "Whether to enable JavaScript code snippets"
                }
            }
        },
        "stat": {
            "title": "IStat",
            "type": "object",
            "description": "SiYuan workspace content statistics",
            "additionalProperties": false,
            "required": [
                "assetsSize",
                "blockCount",
                "cAssetsSize",
                "cBlockCount",
                "cDataSize",
                "cTreeCount",
                "dataSize",
                "treeCount"
            ],
            "properties": {
                "assetsSize": {
                    "type": "integer",
                    "description": "Asset file size (unit: bytes)"
                },
                "blockCount": {
                    "type": "integer",
                    "description": "Number of content blocks"
                },
                "cAssetsSize": {
                    "type": "integer",
                    "description": "Size of resource files after chunk encryption (unit: bytes)"
                },
                "cBlockCount": {
                    "type": "integer",
                    "description": "Number of content blocks after chunk encryption"
                },
                "cDataSize": {
                    "type": "integer",
                    "description": "Size of the data directory after chunk encryption (unit: bytes)"
                },
                "cTreeCount": {
                    "type": "integer",
                    "description": "Number of content block trees after chunk encryption (number of documents)"
                },
                "dataSize": {
                    "type": "integer",
                    "description": "Data directory size (unit: bytes)"
                },
                "treeCount": {
                    "type": "integer",
                    "description": "Number of content block trees (number of documents)"
                }
            }
        },
        "sync": {
            "title": "ISync",
            "type": "object",
            "description": "SiYuan synchronization related configuration",
            "additionalProperties": false,
            "required": [
                "cloudName",
                "enabled",
                "generateConflictDoc",
                "mode",
                "perception",
                "provider",
                "s3",
                "stat",
                "synced",
                "webdav"
            ],
            "properties": {
                "cloudName": {
                    "type": "string",
                    "description": "Cloud workspace name"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable synchronization"
                },
                "generateConflictDoc": {
                    "type": "boolean",
                    "description": "Whether to create a conflict document when a conflict occurs during synchronization"
                },
                "mode": {
                    "type": "integer",
                    "description": "Synchronization mode\n- `0`: Not set\n- `1`: Automatic synchronization\n- `2`: Manual synchronization\n- `3`: Completely manual synchronization",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ]
                },
                "perception": {
                    "type": "boolean",
                    "description": "Whether to enable synchronization perception"
                },
                "provider": {
                    "type": "integer",
                    "description": "Cloud storage service provider\n- `0`: SiYuan official cloud storage service\n- `1`: Object storage service compatible with S3 protocol\n- `2`: Network storage service using WebDAV protocol",
                    "enum": [
                        0,
                        1,
                        2
                    ]
                },
                "s3": {
                    "$ref": "#/$defs/s3"
                },
                "stat": {
                    "type": "string",
                    "description": "The prompt information of the last synchronization"
                },
                "synced": {
                    "type": "integer",
                    "description": "The time of the last synchronization (Unix timestamp)",
                    "examples": [
                        1700000000000
                    ]
                },
                "webdav": {
                    "$ref": "#/$defs/webdav"
                }
            }
        },
        "s3": {
            "title": "IS3",
            "type": "object",
            "description": "S3 compatible object storage related configuration",
            "additionalProperties": false,
            "required": [
                "accessKey",
                "bucket",
                "endpoint",
                "pathStyle",
                "region",
                "secretKey",
                "skipTlsVerify",
                "timeout"
            ],
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Access key"
                },
                "bucket": {
                    "type": "string",
                    "description": "Bucket name"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Service endpoint address",
                    "format": "uri"
                },
                "pathStyle": {
                    "type": "boolean",
                    "description": "Whether to use path-style URLs"
                },
                "region": {
                    "type": "string",
                    "description": "Storage region"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Security key"
                },
                "skipTlsVerify": {
                    "type": "boolean",
                    "description": "Whether to skip TLS verification"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout (unit: seconds)"
                }
            }
        },
        "webdav": {
            "title": "IWebDAV",
            "type": "object",
            "description": "WebDAV related configuration",
            "additionalProperties": false,
            "required": [
                "endpoint",
                "username",
                "password",
                "skipTlsVerify",
                "timeout"
            ],
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "Service endpoint",
                    "format": "uri",
                    "examples": [
                        "https://webdav.example.com/siyuan/"
                    ]
                },
                "password": {
                    "type": "string",
                    "description": "Password"
                },
                "skipTlsVerify": {
                    "type": "boolean",
                    "description": "Whether to skip TLS verification"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout (unit: seconds)"
                },
                "username": {
                    "type": "string",
                    "description": "Username"
                }
            }
        },
        "system": {
            "title": "ISystem",
            "type": "object",
            "description": "System related information",
            "additionalProperties": false,
            "required": [
                "appDir",
                "autoLaunch",
                "confDir",
                "container",
                "dataDir",
                "disableGoogleAnalytics",
                "downloadInstallPkg",
                "homeDir",
                "id",
                "isInsider",
                "isMicrosoftStore",
                "kernelVersion",
                "lockScreenMode",
                "name",
                "networkProxy",
                "networkServe",
                "os",
                "osPlatform",
                "uploadErrLog",
                "workspaceDir"
            ],
            "properties": {
                "appDir": {
                    "type": "string",
                    "description": "The absolute path of the `resources` directory under the SiYuan installation directory"
                },
                "autoLaunch": {
                    "type": "boolean",
                    "description": "Boot automatically"
                },
                "confDir": {
                    "type": "string",
                    "description": "The absolute path of the `conf` directory of the current workspace"
                },
                "container": {
                    "type": "string",
                    "description": "Kernel operating environment\n- `docker`: Docker container\n- `android`: Android device\n- `ios`: iOS device\n- `std`: Desktop Electron environment",
                    "enum": [
                        "docker",
                        "android",
                        "ios",
                        "std"
                    ]
                },
                "dataDir": {
                    "type": "string",
                    "description": "The absolute path of the `data` directory of the current workspace"
                },
                "disableGoogleAnalytics": {
                    "type": "boolean",
                    "description": "Whether to disable Google Analytics"
                },
                "downloadInstallPkg": {
                    "type": "boolean",
                    "description": "Whether to automatically download the installation package for the new version"
                },
                "homeDir": {
                    "type": "string",
                    "description": "The absolute path of the user's home directory for the current operating system user"
                },
                "id": {
                    "type": "string",
                    "description": "The UUID of the current session",
                    "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
                },
                "isInsider": {
                    "type": "boolean",
                    "description": "Whether the current version is an internal test version"
                },
                "isMicrosoftStore": {
                    "type": "boolean",
                    "description": "Whether the current version is a Microsoft Store version"
                },
                "kernelVersion": {
                    "type": "string",
                    "description": "Kernel version number",
                    "pattern": "^\\d+\\.\\d+\\.\\d+$"
                },
                "lockScreenMode": {
                    "type": "integer",
                    "description": "Lock screen mode\n- `0`: Manual\n- `1`: Manual + Follow the operating system",
                    "enum": [
                        0,
                        1
                    ]
                },
                "name": {
                    "type": "string",
                    "description": "The name of the current device"
                },
                "networkProxy": {
                    "$ref": "#/$defs/networkProxy"
                },
                "networkServe": {
                    "type": "boolean",
                    "description": "Whether to enable network serve (whether to allow connections from other devices)"
                },
                "os": {
                    "type": "string",
                    "description": "The operating system name determined at compile time (obtained using the command `go tool dist list`)\n- `android`: Android\n- `darwin`: macOS\n- `ios`: iOS\n- `linux`: Linux\n- `windows`: Windows",
                    "enum": [
                        "android",
                        "darwin",
                        "ios",
                        "linux",
                        "windows"
                    ]
                },
                "osPlatform": {
                    "type": "string",
                    "description": "Operating system platform name"
                },
                "uploadErrLog": {
                    "type": "boolean",
                    "description": "Whether to upload error logs"
                },
                "workspaceDir": {
                    "type": "string",
                    "description": "The absolute path of the workspace directory"
                }
            }
        },
        "networkProxy": {
            "title": "INetworkProxy",
            "type": "object",
            "description": "SiYuan Network proxy configuration",
            "additionalProperties": false,
            "required": [
                "host",
                "port",
                "scheme"
            ],
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Host name or host address"
                },
                "port": {
                    "type": "string",
                    "description": "Proxy server port number",
                    "pattern": "^\\d+$"
                },
                "scheme": {
                    "type": "string",
                    "description": "The protocol used by the proxy server\n- Empty String: Use the system proxy settings\n- `http`: HTTP\n- `https`: HTTPS\n- `socks5`: SOCKS5",
                    "enum": [
                        "",
                        "http",
                        "https",
                        "socks5"
                    ]
                }
            }
        },
        "tag": {
            "title": "ITag",
            "type": "object",
            "description": "SiYuan tag dock related configuration",
            "additionalProperties": false,
            "required": [
                "sort"
            ],
            "properties": {
                "sort": {
                    "type": "integer",
                    "description": "Tag sorting scheme\n- `0`: Name alphabetically ascending\n- `1`: Name alphabetically descending\n- `4`: Name natural ascending\n- `5`: Name natural descending\n- `7`: Reference count ascending\n- `8`: Reference count descending",
                    "default": 4,
                    "enum": [
                        0,
                        1,
                        4,
                        5,
                        7,
                        8
                    ]
                }
            }
        }
    }
}